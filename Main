import pygame
from pygame.locals import *
import pymunk
import pymunk.pygame_util

WHITE = (255, 255, 255)
FPS = 60

# Class for the player's car
class Car:
    def __init__(self, space, x, y):
        self.space = space
        self.body = pymunk.Body(1, 100, body_type=pymunk.Body.DYNAMIC)
        self.body.position = x, y
        self.shape = pymunk.Poly.create_box(self.body, (30, 50))
        self.shape.friction = 0.5
        self.space.add(self.body, self.shape)

    def apply_force(self, force):
        self.body.apply_force_at_local_point((0, force), (0, 0))

    def turn_left(self, steering):
        self.body.apply_force_at_local_point((steering, 0), (750, 0))

    def turn_right(self, steering):
        self.body.apply_force_at_local_point((steering, 0), (750, 0))

# Class for walls
class Wall:
    def __init__(self, space, x, y, width, height):
        self.space = space
        self.body = pymunk.Body(body_type=pymunk.Body.STATIC)
        self.body.position = x, y
        self.shape = pymunk.Poly.create_box(self.body, (width, height))
        self.space.add(self.body, self.shape)

def main():
    pygame.init()
    screen = pygame.display.set_mode((800, 600))

    clock = pygame.time.Clock()
    run = True

    space = pymunk.Space()
    space.gravity = (0, 0)

    car = Car(space, 400, 300)

    wall_top = Wall(space, 0, 0, 800, 10)
    wall_bottom = Wall(space, 0, 590, 800, 10)
    wall_left = Wall(space, 0, 0, 10, 600)
    wall_right = Wall(space, 790, 0, 10, 600)

    draw_options = pymunk.pygame_util.DrawOptions(screen)

    def car_wall_collision(arbiter, space, data):
        car_body = arbiter.shapes[0].body
        wall_body = arbiter.shapes[1].body
        car_body.apply_impulse_at_world_point((0, 1000), car_body.position)
        return True

    car_shape = car.shape
    wall_shapes = [wall_top.shape, wall_bottom.shape, wall_left.shape, wall_right.shape]
    for wall_shape in wall_shapes:
        car_wall_handler = space.add_collision_handler(0, 0)
        car_wall_handler.begin = car_wall_collision
        car_wall_handler.shapes = [car_shape, wall_shape]

    while run:
        for event in pygame.event.get():
            if event.type == QUIT:
                run = False
                
            keys = pygame.key.get_pressed()
            if keys[K_UP]:
                car.apply_force(-1000)
            elif keys[K_DOWN]:
                car.apply_force(500)
            else:
                if car.body.velocity[1] > 0:
                    car.apply_force(-100)
                if car.body.velocity[1] < 0:
                    car.apply_force(100)

            if keys[K_LEFT]:
                car.turn_left(-750)
            if keys[K_RIGHT]:
                car.turn_right(750)

        space.step(1 / 60.0)
        screen.fill(WHITE)
        space.debug_draw(draw_options)
        pygame.display.update()
        pygame.display.flip()
        clock.tick(FPS)

    pygame.quit()

if __name__ == "__main__":
    main()
